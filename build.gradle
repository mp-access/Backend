plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'scala'
    id 'io.gatling.gradle' version '3.7.3.1'
    id 'org.sonarqube' version '3.3'
}

group = 'ch.uzh.ifi.access'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.scala-lang:scala-library:2.13.6'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'

    // Spring Framework
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.6.3'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:2.6.3'
    implementation 'org.springframework.security:spring-security-test:5.6.1'
    implementation 'org.springframework.statemachine:spring-statemachine-core:3.0.1'
    implementation 'org.springframework.retry:spring-retry:1.3.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.6.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.6.3'

    // JGit
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.0.0.202111291000-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:6.0.0.202111291000-r'

    // Keycloak
    implementation 'org.keycloak:keycloak-spring-boot-starter:16.1.0'
    implementation 'org.keycloak.bom:keycloak-adapter-bom:16.1.0'
    implementation 'org.keycloak:keycloak-admin-client:16.1.0'

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    // Open API
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.4'

    // Docker runner
    implementation "com.spotify:docker-client:8.16.0:shaded"

    // Gatling
    implementation 'io.gatling.highcharts:gatling-charts-highcharts:3.7.4'
}

test {
    useJUnitPlatform()
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }

    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests').toString()
    }

    if (project.hasProperty('excludeDockerTests')) {
        exclude '**/CodeRunnerTest.class'
        exclude '**/SubmissionCodeRunnerTest.class'
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

gatling {
    simulations = {
//        include "**/BrowsingSimulation.scala"
        include "**/CodeExecutionSimulation.scala"
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "mp-access_Backend"
        property "sonar.organization", "access"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}

import org.springframework.boot.gradle.tasks.bundling.BootJar

task customFatJar(type: BootJar) {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher'
        attributes 'Start-Class': 'ch.uzh.ifi.access.localtester.LocalTester'
        attributes 'Spring-Boot-Classes': 'BOOT-INF/classes/'
        attributes 'Spring-Boot-Lib': 'BOOT-INF/lib/'
    }

    archiveFileName = "ACCESSTester.jar"
    enabled = true
    with bootJar
}