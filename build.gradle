plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id 'jacoco'
    id "com.github.lkishalmi.gatling" version "3.0.2"
    id "org.sonarqube" version "2.8"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'scala'


group = 'ch.uzh.ifi.access'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    swaggerVersion = '2.9.2'
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.8'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'


    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.9'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.4.RELEASE'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:4.5.0.201609210915-r'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.1.5.RELEASE'
    implementation 'org.springframework.retry:spring-retry:1.2.4.RELEASE'

    implementation 'org.springframework.statemachine:spring-statemachine-core:2.1.3.RELEASE'

    // Keycloak admin client dependencies
    implementation 'org.keycloak:keycloak-admin-client:6.0.0'
    implementation 'org.jboss.resteasy:resteasy-client:3.6.3.Final'
    implementation 'org.jboss.resteasy:resteasy-jackson2-provider:3.6.3.Final'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    // Swagger
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"

    // Docker runner
    implementation "com.spotify:docker-client:8.16.0:shaded"

    // Gatling
    implementation 'io.gatling.highcharts:gatling-charts-highcharts:3.0.2'

    compile 'org.springframework.cloud:spring-cloud-starter-sleuth:2.1.4.RELEASE'
}

test {
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }

    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }

    if (project.hasProperty('excludeDockerTests')) {
        exclude '**/CodeRunnerTest.class'
        exclude '**/SubmissionCodeRunnerTest.class'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

gatling {
    simulations = {
//        include "**/BrowsingSimulation.scala"
        include "**/CodeExecutionSimulation.scala"
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "mp-access_Backend"
        property "sonar.organization", "access"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}

import org.springframework.boot.gradle.tasks.bundling.BootJar

task customFatJar(type: BootJar) {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher'
        attributes 'Start-Class': 'ch.uzh.ifi.access.localtester.LocalTester'
        attributes 'Spring-Boot-Classes': 'BOOT-INF/classes/'
        attributes 'Spring-Boot-Lib': 'BOOT-INF/lib/'
    }

    archiveFileName = "ACCESSTester.jar"
    enabled = true
    with bootJar
}