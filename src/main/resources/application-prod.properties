# Security and CORS
# Can be set to false to disable security during local development
rest.security.enabled=true
rest.security.api-matcher=/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600
# OpenID
rest.security.keycloak-api-admin=${KEYCLOAK_USER}
rest.security.keycloak-api-password=${KEYCLOAK_PASSWORD}
rest.security.auth-server=${KEYCLOAK_HOST}/auth
rest.security.realm=${REALM}
rest.security.frontend-client-id=${FRONTEND_REALM}
rest.security.redirect-uri-after-actions=${REDIRECT_URI_EMAIL}
rest.security.issuer-uri=${rest.security.auth-server}/realms/${rest.security.realm}
rest.security.token-endpoint=${rest.security.issuer-uri}/protocol/openid-connect/token
rest.security.authorization-endpoint=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.resource.id=course-service
security.oauth2.resource.jwk.key-set-uri=${JWK_URI}
# Others
server.servlet.context-path=/api
# Initialize course participants
course.users.init-on-startup=true
course.users.use-default-password-for-new-accounts=true
course.users.default-password=test
course.users.email.max-attempts=${EMAIL_MAX_ATTEMPTS:5}
course.users.email.delay=${EMAIL_DELAY_ATTEMPTS:2000}

# MongoDB
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.database=${MONGO_DB_NAME}
spring.data.mongodb.host=mongo
spring.data.mongodb.port=27017
spring.data.mongodb.username=${MONGO_DB_USER}
spring.data.mongodb.password=${MONGO_DB_PASSWORD}
# Evaluation worker threads
submission.eval.thread-pool-size=10
submission.eval.max-pool-size=20
submission.eval.queue-capacity=1000
submission.eval.user-rate-limit=true
# Server info
server.info.version=${BACKEND_VERSION:version-unknown}