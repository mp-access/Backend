version: 2.1

# CircleCI Packages
orbs:
  docker: circleci/docker@2.0.1   # Pre-configured Docker jobs, see circleci.com/developer/orbs/orb/circleci/docker
  gradle: circleci/gradle@2.2.0   # Pre-configured gradle jobs, see circleci.com/developer/orbs/orb/circleci/gradle

executors:
  access-backend-executor:    # Infrastructure setup for backend jobs
    docker:
      - image: cimg/openjdk:11.0      # Primary container for running gradle commands
      - image: circleci/mongo:5.0.5   # MongoDB image (CircleCI version)
      - image: jboss/keycloak:16.1.0  # Keycloak image, same as the one used in mp-access/Infrastructure
        environment:
            KEYCLOAK_USER: admin      # Initial username for the Keycloak Admin Console
            KEYCLOAK_PASSWORD: admin  # Initial password for the Keycloak Admin Console
        command:
          - "-Djboss.bind.address=0.0.0.0"    # Bind Keycloak to a specific address
          - "-Djboss.http.port=9999"          # Bind Keycloak to a specific port

jobs:
  push-to-dockerhub:
    docker:
      - image: cimg/base:stable
    steps:
      - docker/push:      #  Push a ready backend image to Docker Hub (circleci/docker job)
          image: sealuzh/access-backend
          tag: updates
          # See the Backend project env variables DOCKER_LOGIN, DOCKER_PASSWORD for credentialsg

workflows:
  access-backend-workflow:      
    jobs:
      - gradle/test:        # Checkout, build and test the backend, includes caching (circleci/gradle job)
          test_command: test -PexcludeDockerTests=true
          executor: access-backend-executor

      - gradle/run:         # Run a SonarQube analysis, includes caching (circleci/gradle job)
          command: sonarqube
          executor: access-backend-executor
          context:
            - SonarCloud
          # See the SonarCloud context env variable SONAR_TOKEN for credentials

      - gradle/run:         # Build the backend Docker image using gradle (circleci/gradle job)
          name: build-backend-image
          command: bootBuildImage --imageName=sealuzh/access-backend:updates
          executor: access-backend-executor
          # See docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#build-image

      - push-to-dockerhub:  # Push the backend image to Docker Hub after building it
          requires:
            - build-backend-image