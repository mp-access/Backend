version: 2.1
jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0
      - image: jboss/keycloak:16.1.0
        environment:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
      - image: circleci/mongo:5.0.5
    working_directory: ~/backend
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }} # When this file changes, the key will fail
            - v1-dependencies- # Fallback key
      - run: gradle dependencies
      - save_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches
      - run:
          name: Run tests
          command: |
            echo $DOCKER_HOST
            echo $DOCKER_CERT_PATH
            gradle test
      - run: gradle jacocoTestReport
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Analyze on SonarCloud
          command: gradle build sonarqube
      - run:
          name: Send test coverage to Codacy
          command: |
            #curl -Ls -o codacy-coverage-reporter-assembly.jar $(curl -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({content_type, browser_download_url} | select(.content_type | contains("java-archive"))) | .[0].browser_download_url')
            #java -jar codacy-coverage-reporter-assembly.jar report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml
            echo "Codacy parsing disabled until it works again"
      - run:
          name: Create ACCESS local tester
          command: gradle customFatJar
      - store_artifacts:
          path: ./build/libs

  push_to_dockerhub:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/backend
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Print Docker image name
          command: echo "sealuzh/access-backend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')"
      - run:
          name: Build Docker image
          command: docker build -t sealuzh/access-backend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') .
      - add_ssh_keys:
          fingerprints:
            - "fe:b1:c8:73:4c:fd:f9:6f:b9:84:56:6a:bc:ad:03:c8"
      - run:
          name: Push Docker image
          command: |
            echo $DOCKER_SEAL_PWD | docker login -u $DOCKER_SEAL_LOGIN --password-stdin
            docker push sealuzh/access-backend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          context: SonarCloud
      - push_to_dockerhub