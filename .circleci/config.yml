version: 2.1

# CircleCI Packages
orbs:
  gradle: circleci/gradle@2.2.0   # Pre-configured gradle jobs, see circleci.com/developer/orbs/orb/circleci/gradle

executors:
  access-backend-executor:    # Infrastructure setup for backend jobs
    docker:
      - image: cimg/openjdk:11.0      # Primary container for running gradle commands
      - image: circleci/mongo:5.0.5   # MongoDB image (CircleCI version)
      - image: jboss/keycloak:16.1.0  # Keycloak image, same as the one used in mp-access/Infrastructure
        environment:
          KEYCLOAK_USER: admin      # Initial username for the Keycloak Admin Console
          KEYCLOAK_PASSWORD: admin  # Initial password for the Keycloak Admin Console
        command:
          - "-Djboss.bind.address=0.0.0.0"    # Bind Keycloak to a specific address
          - "-Djboss.http.port=9999"          # Bind Keycloak to a specific port

jobs:
  create-backend-image:    # Build and push the backend image to Docker Hub via a gradle task
    executor: access-backend-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: bootBuildImage
          command: ./gradlew bootBuildImage -Pimage=$DOCKER_IMAGE -Ptag=$CIRCLE_BRANCH -Plogin=$DOCKER_LOGIN -Ppassword=$DOCKER_PASSWORD
          # See the Backend project environment for the variables DOCKER_IMAGE, DOCKER_LOGIN, DOCKER_PASSWORD

workflows:
  access-backend-workflow:
    jobs:
      - gradle/test:      # Checkout, build and test the backend, includes caching (circleci/gradle job)
          name: Backend Tests
          test_command: test -PexcludeDockerTests=true
          executor: access-backend-executor

      - gradle/run:       # Run a SonarQube analysis, includes caching (circleci/gradle job)
          name: SonarQube Analysis
          command: sonarqube -Dsonar.login=$SONAR_TOKEN
          executor: access-backend-executor
          requires:
            - Backend Tests
          context: SonarCloud
          # See the SonarCloud context environment for the variable SONAR_TOKEN

      - create-backend-image:
          name: Build and Push to Docker Hub